version: "3.5"

services:
  auth_postgres:
    container_name: auth_postgres
    image: "postgres:13"
    env_file:
      - envs/auth/.env
    volumes:
      - $HOME/postgresql/auth_data:/var/lib/postgresql/auth_api_data
    restart: always
    networks:
      - cinema
    ports:
      - "5433:5432"

  auth_redis:
    container_name: auth_redis
    image: redis:7
    env_file:
      - envs/auth/.env
    volumes:
      - $HOME/redis/data:/var/lib/redis/data
    networks:
      - cinema

  auth:
    container_name: auth
    image: ghcr.io/praktikum-projects-team/auth_api:0.1.3
    env_file:
      - envs/auth/.env
    depends_on:
      - auth_redis
      - auth_postgres
    ports:
      - "8000:8000"
    networks:
      - cinema

  friends_postgres:
    container_name: friends_postgres
    image: "postgres:13"
    env_file:
      - envs/friends/.env
    volumes:
      - $HOME/postgresql/friends_data:/var/lib/postgresql/friends_api_data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U app -d friends_db" ]
      interval: 10s
      timeout: 3s
      retries: 3
    restart: always
    networks:
      - cinema
    ports:
      - "5432:5432"

  friends_api:
    container_name: friends_api
    build: .
    env_file:
      - envs/friends/.env
    volumes:
      - $HOME/postgresql/friends_data:/var/lib/postgresql/friends_api_data
    depends_on:
      friends_postgres:
        condition: service_healthy
    networks:
      - cinema

  nginx:
    container_name: nginx
    image: nginx:latest
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/configs:/etc/nginx/conf.d:ro
    depends_on:
      - friends_api
    ports:
      - "80:80"
    networks:
      - cinema


networks:
  cinema:
    name: cinema
